ABNF taken from: http://about.psyc.eu/Spec:Syntax
  
  packet     = routing-header [ content-length content ] "|" LF
             ; the length of content is either implicit (scan until LF "|" LF)
             ; or explicitly reported in content-length.
  
  routing-header = *routing-modifier
  entity-header  = *entity-modifier
  content        = entity-header [ body LF ]
  content-length = [ length ] LF
  
  routing-modifier = operator variable ( simple-arg / LF )
  entity-modifier  = operator variable ( simple-arg / binary-arg / LF )
  
  body       = method [ LF data ]
  
  operator   = "=" / ":" / "+" / "-" / "?" / "!" / <more reserved glyphs>
  simple-arg = HTAB text-data LF
  binary-arg = SP length HTAB binary-data LF
  
  length      = 1*DIGIT
  binary-data = <a length byte long byte sequence>
  
  method     = 1*kwchar
  variable   = 1*kwchar
  text-data  = *nonlchar
  
  data       = <amount of bytes as given by length or until
                the (LF "|" LF) sequence has been encountered>
  
  nonlchar   = %x00-09 / %x0B-FF             ; basically any byte except newline
  kwchar     = <alpha numeric ASCII char or "_">
  
  
Either text-data or binary-data can contain lists, which adhere to the following syntax (in ABNF):
  
  list         =  binary-elem *("|" binary-elem)  ; for binary values
              =/ "|" text-elem *("|" text-elem)  ; for visible/non-binary characters
  binary-elem  = length SP binary-data
  text-elem    = *nonlpipechar
  nonlpipechar = %x00-09 / %x0B-7B / %x7D-FF ; any byte except newline and "|"
  
Either format can appear in either data container! This list syntax is only valid for variables of the _list type that start with _list.
  
For the definition of DIGIT, VCHAR, SP, LF and HTAB see RFC 2234 (ABNF).